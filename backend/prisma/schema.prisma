// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_PUBLIC_URL")
}

model User {
  id String @id @default(uuid())
  email String @unique
  hashedPassword String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  passwordTokens PasswordResetToken[]
  files File[]
}

model PasswordResetToken {
  id String @id @default(uuid())
  token String @unique
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model File {
  id String @id @default(uuid())
  name String
  size Int
  user User @relation(fields: [createdBy], references: [id], onDelete: Cascade)
  folder Folder @relation(fields: [folder], references: [id], onDelete: Cascade)
  folder String
  createdBy String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}

model Folder {
  id String @id @default(uuid())
  name String
  user User @relation(fields: [createdBy], references: [id], onDelete: Cascade)
  createdBy String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  files File[]
}